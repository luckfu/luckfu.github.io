<?xml version="1.0" encoding="utf-8" standalone="yes"?><search><entry><title>hugo + github action + github vscode 真香</title><url>http://www.luckfu.com/post/first_github_action/</url><categories><category>github</category><category>github action</category><category>hugo</category></categories><tags><tag>githubd</tag><tag>github action</tag><tag>hugo</tag></tags><content type="html"> github action 真香，github的vscode编辑器真香，结合起来真水无香😄 本站是基于hugo发布在github pages上,这种静态网站比较麻烦的是，本地编辑本地发布，public发布到github.io,如果还要源码也存入github，还得再建一个repo存源码，public作为submodule添加到根repo，delpy时还得submodule update， 还好此时有github action，通过actions-hugo，只需要发布一次，就可以更新github pages,真香
更香的是，github 推出了牛逼哄哄的vscode编辑器，只要在源码项目上点.键 自动进入网页版vscode，自带git，现在可以通过这个编辑器在线编写内容，保存提交，再通过action自动发布，实现在线编辑blog的需求。</content></entry><entry><title>将docker容器作为虚拟机折腾</title><url>http://www.luckfu.com/post/ampere_a1_docker/</url><categories><category>cloud vps</category><category>docker</category></categories><tags><tag>Oracle Cloud</tag><tag>Free VPS</tag><tag>docker</tag><tag>VM.Standard.A1.Flex</tag></tags><content type="html"> 上一篇说到Oracle Cloud免费且大热的4c24g的VM.Standard.A1.Flex机型难申请，而实际使用中，oracle cloud免费套餐中陷阱还是很多的，以下是几种常见情况：
免费主机超额度，免费存储超额度，oc优先停掉的资源就是这个A1.Flex机型。
A1.Flex机型可选操作系统只有oracle linux 7或8，不一定顺手。
操作系统被玩坏时，不像一般云服务控制台可以恢复镜像，你只能重新申请
将容器作为虚拟机使用并不符合容器应用部署的初衷，但鉴于以上问题本文中采用docker创建一个容器代替虚拟机，一切在虚机中操作，当系统灾难不可恢复时，删掉就好，省却刷机抢注之苦。
布署步骤 ssh 登录到主机
1、安装docker yum install docker 2、Dockerfile 编写Dockerfile
FROMubuntu:20.04LABELMAINTAINER="luckfu.com"USERroot# change root password to `ubuntu` RUNecho'root:ubuntu'|chpasswdENVDEBIAN_FRONTENDnoninteractive# install ssh server RUNapt-getupdate&amp;&amp;apt-getinstall-y\openssh-serversudo\&amp;&amp;rm-rf/var/lib/apt/lists/* \ &amp;&amp; mkdir -p /run/sshd \ &amp;&amp; ssh-keygen -A \ &amp;&amp; sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_config \ &amp;&amp; apt-get purge -y --auto-remove EXPOSE 22 # run ssh server CMD ["/usr/sbin/sshd", "-D", "-o", "ListenAddress=0.0.0.0"] 3、生成镜像 docker build -f ./Dockerfile -t ubuntu-ssh 使用 docker images命令查看
docker images REPOSITORY TAG IMAGE ID CREATED SIZE ubuntuos-ssh latest b6010c26ebb7 1 days ago 189MB ubuntu 20.04 d5ca7a445605 8 weeks ago 65.6MB 4、启动容器 执行命令
docker run -d -p 9022:22 -p 8000-9000:8000-9000 \ -v /data/:/data \ --name ubuntuos-ssh ubuntuos-ssh 主要参数及含义：
参数 解释 -d 守护进程模式 -p 端口映射 [主机端口:容器端口] -v 存储卷映射 [主机目录:容器目录] &ndash;name 指定容器名称 ubuntuos 上述命令中我们部署了一个名称为ubuntuos-ssh的容器，将主机的/data(oracle cloud 中可以申请100G“始终免费”存储，挂载到主机/data)挂载到容器的/data下，将主机的9022映射容器的ssh服务22端口，另外开放了8000-9000端口备用
查看容器是否运行
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 0c9cf191daf2 ubuntuos-ssh "/usr/sbin/sshd -D -…" 12 days ago Up 12 days 0.0.0.0:8000-9000->8000-9000/tcp, :::8000-9000->8000-9000/tcp, 0.0.0.0:9022->22/tcp, :::9022->22/tcp ubuntuos-ssh 登录容器ß
这里我们要使用ssh，而不是exec -it 进入
密码 ubuntu
ssh root@localhost -p 9022 root@localhost's password: (base) root@xxxxxxx:~# 到这里如果正常登录，则说明容器正常运行
5、通过网络登录 登录oracle cloud控制台
检查容器使用的 22 8000-9000端口是否开通 主机检查防火墙如iptables firwwall中，端口是否打开 远程登录 ssh root@IP -p 9022 可劲造吧</content></entry><entry><title>使用python脚本抢注Oracle甲骨文 VM.Standard.A1.Flex</title><url>http://www.luckfu.com/post/ampere_a1_free/</url><categories><category>cloud vps</category><category>python</category><category>oci</category></categories><tags><tag>Oracle Cloud</tag><tag>Free VPS</tag><tag>python script</tag><tag>自动化脚本</tag><tag>VM.Standard.A1.Flex</tag></tags><content type="html"> Oracle cloud 开放注册账号能申请4c24g的免费云服务器,数据库以及其他的服务，1c1g的x86服务器比较容易申请，但热门的4c24g的Ampere A1类型主机通过网页正常申请根本申请不到，目前网络上流行的抢注方法无外乎两种模式：
浏览器插件或脚本或按键精灵，这种方法的问题是控制台超时，还容易被服务器判定非法操作，禁用账号，对于动辄要求稳定运行几天才能完成的操作，显然已经不合适。 调用oci命令脚本，这是最安全的模式，因为oci是oracle官方提供，原理是使用oci命令直接申请实例，例如： oci compute instance launch .... 然而，根据我香港主机测试，这种最多只能做到20秒刷新一次，原因是 oci 命令执行的完整的过程：
1、启动、开始连接 oracle cloud 2、验证用户合法性 3、执行命令 4、退出 1，2，4步骤在循环中浪费了大量时间，本文中采用python调用oci api 的模式，一次登录省略多次验证环节，循环执行创建instance命令，刷新速度可以达到3秒/次 当返回instance创建成功时，自动退出。
布署步骤 1、下载oci工具 bash -c "$(curl –L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh)" 默认回车，安装完成后，执行下面命令检查是否成功
oci -v 2、配置oci连接 在oracle cloud控制台上，点击右上角头像=>菜单中选择“用户设置” 复制用户和租户ID 输入
oci setup config 填写正确的用户和租户id
Enter a location for your config [/root/.oci/config]: Enter a user OCID: #输入你的用户ocid Enter a tenancy OCID: #输入你租户的用户id Enter a region by index or name(e.g. 1: ap-chiyoda-1, 2: ap-chuncheon-1, 3: ap-hyderabad-1, 4: ap-melbourne-1, 5: ap-mumbai-1, 6: ap-osaka-1, 7: ap-seoul-1, 8: ap-sydney-1, 9: ap-tokyo-1, 10: ca-montreal-1, 11: ca-toronto-1, 12: eu-amsterdam-1, 13: eu-frankfurt-1, 14: eu-zurich-1, 15: me-dubai-1, 16: me-jeddah-1, 17: sa-santiago-1, 18: sa-saopaulo-1, 19: uk-cardiff-1, 20: uk-gov-cardiff-1, 21: uk-gov-london-1, 22: uk-london-1, 23: us-ashburn-1, 24: us-gov-ashburn-1, 25: us-gov-chicago-1, 26: us-gov-phoenix-1, 27: us-langley-1, 28: us-luke-1, 29: us-phoenix-1, 30: us-sanjose-1): 9 #这里选择区域 Do you want to generate a new API Signing RSA key pair? (If you decline you will be asked to supply the path to an existing key.) [Y/n]: y #输入y Enter a directory for your keys to be created [/root/.oci]: Enter a name for your key [oci_api_key]: Public key written to: /root/.oci/oci_api_key_public.pem Enter a passphrase for your private key (empty for no passphrase): Private key written to: /root/.oci/oci_api_key.pem Fingerprint: Config written to /root/.oci/config ... 复制生成的公钥，获取命令如下：
cat /root/.oci/oci_api_key_public.pem 把展示出来的内容复制下来。并且添加到，甲骨文后台=>用户设置&raquo;资源&raquo;API秘钥&raquo;添加API秘钥
3、python脚本 安装python oci 假设你已经安装好python环境
pip install oci 登录证书 新建或使用系统已有的证书，本文直接查看本机已有证书记录下来 cat ~/.ssh/id_rsa.pub ssh-rsa AAAAB3NzaC1yc2EAAA......local 修改脚本 下载:
link 修改luanch.py 脚本中的参数 INSTANCE_NAME = 'vps实例名' #你要创建的vps实例名 SUBNET_ID = "网络->虚拟云网络->虚拟云网络详细信息->OCID" #如果是全新用户，先创建一个VNC compartment_id= &lt;font color=red>"租户id" ssh_public_key="id_rsa.pub的内容" 运行 执行脚本，当主机申请完成，会自动退出
python ./luanch.py</content></entry><entry><title>关于我</title><url>http://www.luckfu.com/about.html</url><categories/><tags/><content type="html"> 更多信息请访问GitHub.</content></entry></search>